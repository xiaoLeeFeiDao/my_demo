{
    "files.associations": {
        "cstdio": "cpp",
        "ostream": "cpp",
        "type_traits": "cpp",
        "atomic": "cpp",
        "cstdint": "cpp",
        "cstring": "cpp",
        "iostream": "cpp",
        "cpp_learn_inner.h": "c",
        "array": "cpp",
        "string": "cpp",
        "string_view": "cpp",
        "bitset": "cpp"
    },
    "C_Cpp.clang_format_path": "Microsoft",
    "C_Cpp.clang_format_style": "Visual Studio",
    "C_Cpp.vcFormat.indent.accessSpecifiers": true,
    "C_Cpp.vcFormat.indent.braces": true,
    "C_Cpp.vcFormat.indent.caseContentsWhenBlock": true,
    "C_Cpp.vcFormat.indent.caseLabels": true,
    "C_Cpp.vcFormat.indent.preserveComments": true,
    "C_Cpp.vcFormat.indent.preserveWithinParentheses": false,
    // "C_Cpp.default.compilerPath": "C:\\cygwin64\bin\\g++.exe",
    // "C_Cpp.default.compilerPath": "C:\\SysGCC\\arm-eabi\\bin\\g++.exe",
    "debug.allowBreakpointsEverywhere": true,
    "editor.cursorStyle": "line",
    "editor.lineNumbers": "on",
    "editor.wordSeparators": "/\\()\"':,.;<>~!@#$%^&*|+=[]{}`?-",
    "editor.wordWrap": "off",
    "terminal.integrated.profiles.windows": {
        "cygwin": {
            "path": "C:\\cygwin64\\bin\\bash.exe",
            "env": {
                // "HOME": "${workspaceFolder}", // 错�??：不�?持win风格�?�?
                "CHERE_INVOKING": "1" // cygwin默�?�执�?/etc/profile以�?�查环境变量CHERE_INVOKING，�?�果设置，则禁�?�更改目录到$HOME�?
            },
            "icon": "terminal-bash",
            "args": [
                "--login",
            ]
        },
        "win_cmd": {
            "path": [
                "${env:windir}\\Sysnative\\cmd.exe",
                "${env:windir}\\System32\\cmd.exe"
            ],
            "args": [],
            "icon": "terminal-cmd"
        },
        "GitBash": {
            "source": "Git Bash"
        },
        "MacOSBash": {
            "source": "Git Bash"
        }
    },
    // "terminal.integrated.defaultProfile.windows": "cygwin",
    "terminal.integrated.defaultProfile.windows": "Command Prompt",
    // "terminal.integrated.defaultProfile.windows": "PowerShell",
    "files.encoding": "utf8",
    // "files.encoding": "gb2312",
    // "window.zoomLevel": 0.0, // 调整窗口的缩放级�?
    "window.zoomLevel": 0,
    // --------------- cmake config ------------------------------------------
    // "cmake.sourceDirectory": "d:/code/test_win11",
    "cmake.sourceDirectory": "${workspaceFolder}/.",
    // "cmake.sourceDirectory": "${workspaceFolder}/.",
    // "cmake.cacheInit": "build", // 
    "cmake.buildDirectory": "${workspaceFolder}/build",
    "cmake.outputLogEncoding": "UTF-8",
    // "cmake.outputLogEncoding": "GBK",
    // "cmake.configureArgs": [],
    // "cmake.cmakePath": "/usr/bin/cmake",
    // "cmake.cmakePath": "/usr/bin/cmake",
    // "cmake.cmakePath": "C:\\Program Files\\CMake\\bin\\cmake.exe",
    // "cmake.cmakePath": "C:\\msys64\\usr\\bin\\cmake.exe",
    // "cmake.cmakePath": "/opt/homebrew/bin/cmake",
    // "cmake.cmakePath": "/usr/bin/cmake",
    //"cmake.cmakePath": "/usr/sbin/cmake",
    // "cmake.mingwSearchDirs": [],
    // "cmake.buildDirectory": "build",
    // "cmake.sourceDirectory": "/cygdrive/d/code/test_win11",
    // "cmake.sourceDirectory": "D:/code/test_win11",
    // "cmake.outputLogEncoding": "gbk",
    // "cmake.buildTask": false, // 设置为true表示将从tasks.json进�?�build，编译过程在终�??展示而不�?输出�?展示
    // "cmake.configureOnOpen": true,
    // "cmake.platform": "Unix Makefiles",
    // "cmake.generator": "MinGW Makefiles",
    // "cmake.generator": "Unix Makefiles",
    // "cmake.cacheInit": "d:/code/test_win11/build"
    // "cmake.cacheInit": "/cygdrive/d/code/test_win11/build",
    // "cmake.buildDirectory": "${workspaceFolder}/build",
    "cmake.configureOnOpen": true,
    "C_Cpp.errorSquiggles": "disabled",
    "terminal.integrated.env.windows": {
        "CHERE_INVOKING": "1",
        "MSYSTEM": "MINGW64",
    },
    // "C_Cpp.default.compilerPath": "C:\\msys64\\usr\\bin\\g++.exe",
    "C_Cpp.default.compilerPath": "/usr/bin/g++",
    // "editor.fontFamily": "'Fira Code', 'FiraCode-Retina', 'FiraCode-Light', 'FiraCode-Medium', 'FiraCode-Bold'",
    // "editor.fontFamily":"'FiraCode-Retina', '华为楷体', monospace",
    "editor.fontFamily": "Hack, '华为楷体', monospace",
    "editor.fontLigatures": true,
    "terminal.integrated.fontFamily": "Hack, '华为楷体', monospace",
}